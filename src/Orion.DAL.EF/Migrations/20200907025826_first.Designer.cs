// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orion.DAL.EF.Models.DB;

namespace Orion.DAL.EF.Migrations
{
    [DbContext(typeof(OrionContext))]
    [Migration("20200907025826_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Orion.DAL.EF.Models.DB.AccessGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccessGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessGroupName = "Admin",
                            CreatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedBy = 1,
                            IsDeleted = false,
                            LastUpdatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            LastUpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            AccessGroupName = "User",
                            CreatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedBy = 1,
                            IsDeleted = false,
                            LastUpdatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            LastUpdatedBy = 1
                        });
                });

            modelBuilder.Entity("Orion.DAL.EF.Models.DB.CapturedTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("CapturedTime");
                });

            modelBuilder.Entity("Orion.DAL.EF.Models.DB.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedBy = 1,
                            IsDeleted = false,
                            LastUpdatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            LastUpdatedBy = 1,
                            Rate = 25m,
                            RoleName = "Casual Employee Level 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedBy = 1,
                            IsDeleted = false,
                            LastUpdatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            LastUpdatedBy = 1,
                            Rate = 50m,
                            RoleName = "Casual Employee Level 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedBy = 1,
                            IsDeleted = false,
                            LastUpdatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            LastUpdatedBy = 1,
                            Rate = 50m,
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("Orion.DAL.EF.Models.DB.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(18, 1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedBy = 1,
                            Duration = 1m,
                            IsDeleted = false,
                            LastUpdatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            LastUpdatedBy = 1,
                            TaskName = "Default Task"
                        });
                });

            modelBuilder.Entity("Orion.DAL.EF.Models.DB.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccessGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ChangePasswordOnNextLogin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("image");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccessGroupId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessGroupId = 1,
                            AppointmentDate = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            ChangePasswordOnNextLogin = false,
                            CreatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedBy = 1,
                            Email = "admin@admin.com",
                            EmployeeNumber = "XXXXXXXXX",
                            FirstName = "Root",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            LastUpdatedAt = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            LastUpdatedBy = 1,
                            LockoutEnabled = false,
                            PasswordHash = "CWa/NbR02Squq2Np65dn4Q==",
                            RoleId = 1,
                            UserName = "SuperUser"
                        });
                });

            modelBuilder.Entity("Orion.DAL.EF.Models.DB.CapturedTime", b =>
                {
                    b.HasOne("Orion.DAL.EF.Models.DB.Task", "Task")
                        .WithMany("CapturedTime")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_CapturedTime_Task")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.DAL.EF.Models.DB.User", "User")
                        .WithMany("CapturedTime")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CapturedTime_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Orion.DAL.EF.Models.DB.User", b =>
                {
                    b.HasOne("Orion.DAL.EF.Models.DB.AccessGroup", "AccessGroup")
                        .WithMany("User")
                        .HasForeignKey("AccessGroupId")
                        .HasConstraintName("FK_User_AccessGroup");

                    b.HasOne("Orion.DAL.EF.Models.DB.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role");
                });
#pragma warning restore 612, 618
        }
    }
}
